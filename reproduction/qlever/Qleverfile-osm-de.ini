# Qleverfile for OSM Germany, adapted from https://github.com/ad-freiburg/qlever-control

# Dataset settings
[data]
CONTINENT         = europe
COUNTRY           = germany
NAME              = osm-${COUNTRY}
PBF               = ${NAME}.pbf
WITH_TEXT         = false
VERSION           = $$(ls -l --time-style=+%d.%m.%Y ${PBF} 2> /dev/null | cut -d' ' -f6)
GET_DATA_CMD      = wget -nc -O ${PBF} https://download.geofabrik.de/${CONTINENT}/${COUNTRY}-latest.osm.pbf && rm -f ${NAME}.*.bz2 && ( time podman run --rm --entrypoint /bin/bash -v ./:/mnt:rw osm2rdf -c "cd /mnt && osm2rdf ${PBF} -o ${NAME}.ttl --cache . --aux-geo-files *-aux-geo.tsv" ) 2>&1 | tee ${NAME}.osm2rdf-log.txt && rm -f spatial-*
DESCRIPTION       = OSM ${COUNTRY}, dump from ${VERSION} with ogc:sfContains and centroids and auxiliary geometries

# Indexer settings
[index]
INPUT_FILES       = ${data:NAME}.ttl.bz2
CAT_INPUT_FILES   = set -o pipefail && bash -c "cat prefixes.ttl && bzcat ${data:NAME}.ttl.bz2"
STXXL_MEMORY      = 40G
SETTINGS_JSON     = { "prefixes-external": [ "\"LINESTRING(", "\"MULTIPOLYGON(", "\"POLYGON(" ], "ascii-prefixes-only": false, "num-triples-per-batch": 20000000, "parallel-parsing": true }

# Server settings
[server]
HOSTNAME                    = localhost
PORT                        = 7925
ACCESS_TOKEN                = ${data:NAME}
MEMORY_FOR_QUERIES          = 50G
CACHE_MAX_SIZE              = 1G
CACHE_MAX_SIZE_SINGLE_ENTRY = 1G
CACHE_MAX_NUM_ENTRIES       = 100
TIMEOUT                     = 3600s

# Runtime to use
[runtime]
# SYSTEM = native
SYSTEM = podman
IMAGE = docker.io/adfreiburg/qlever:commit-01d8306

# Qlever UI
#[ui]
#UI_PORT   = 8176
#UI_CONFIG = osm
